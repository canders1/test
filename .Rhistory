knitr::opts_chunk$set(echo = TRUE)
library(dplyr)
library(car)
library(MASS)
library(reshape)
library(mosaic)
library(tidyr)
library(ggplot2)
library(ggmap)
library(corrr)
library(cluster)
library(fpc)
#import data
n <- c("receiveTime", "participant", "controller", "item", "element", "type", "group", "question", "answer", "correct", "responseTime")
pairs <- read.csv('~/shift/stimuli/experiment1/results/results.txt',header=FALSE,col.names=n,comment.char = "#")
#Separate into training items, comics, fillers, aq, and survey items
survey <- pairs[pairs$controller=='Form',]
pairs <- pairs %>% mutate(question = lag(question))
comics <- pairs[pairs$controller=='ComicCaption'|pairs$controller=='AcceptabilityJudgment',]
comics <- comics[!is.na(comics$responseTime),]
comics <- comics[comics$type!='train',]
comics$answer <- as.numeric(as.character(comics$answer))
comics$type <- as.character(comics$type)
comics$type <- replace(comics$type,comics$item=="110","tdb")
comics$type <- replace(comics$type,comics$item=="111","tdb")
comics$type <- replace(comics$type,comics$item=="112","nddb")
comics$type <- factor(comics$type)
#Reshape and add survey info
forms <- subset( survey, select = -c(controller,group,item,correct,receiveTime,responseTime,element) )
sform <- cast(forms, participant ~ question,value='answer')
comics <- merge(comics,sform,by="participant")
sform$ParentsLanguage <- tolower(sform$ParentsLanguage)
sform$ParentsLanguage <- gsub("egnlish","english", sform$ParentsLanguage, perl=T)
nonEnglishParent <- subset(sform, grepl("english", ParentsLanguage, fixed=TRUE)==FALSE)
comics <- subset(comics, !(participant %in% nonEnglishParent$participant))
sform <- subset(sform, !(participant %in% nonEnglishParent$participant))
View(nonEnglishParent)
#Find outliers by comparing means across conditions
mean.by.participant <- comics %>%
group_by(participant,type) %>%
summarize( Mean = mean(answer))
parts <- cast(mean.by.participant,participant ~ type,value='Mean')
bad <- subset(parts, `item-day1`>=`item-day2`-1) #Throw out participants who didn't rate bad baseline lower than good baseline by at least 1 point on average
comics <- subset(comics, !(participant %in% bad$participant))
mean.by.participant <- subset(mean.by.participant, !(participant %in% bad$participant))
sform <- subset(sform, !(participant %in% bad$participant))
View(bad)
#Normalize spelling
states <- tolower(comics$State)
states <- gsub(" $","", states, perl=T)
for (i in 1:length(states)) {
if (nchar(states[i]) > 2) {
states[i] = state.abb[match(states[i] ,tolower(state.name))]
}
}
States <- toupper(states)
comics$State <- States
###### Create plot
state.data <- data.frame(states = table(States))
state.data$x <- state.center$x[match(state.data$states.States ,state.abb)]
state.data$y<- state.center$y[match(state.data$states.States ,state.abb)]
names(state.data) <- c("State","Frequency","x","y")
map <- get_map(location = 'USA', zoom = 4,maptype="roadmap")
location.plot <- ggmap(map) + geom_point(aes(x = x, y = y, size = Frequency), data = state.data, alpha = .5)+ scale_size(range = c(0, 30))
##### Remerge bio info
W <- data.frame(Region = "W", State = c("CA","NV","OR","WA","ID","MT","WY","CO","UT"))
SW <- rbind(W,data.frame(Region="SW",State=c("AZ","NM","OK","TX")))
MW <- rbind(SW,data.frame(Region="MW",State=c("ND","SD","NE","KS","MN","IA","MO","WI","MI","IL","IN","OH")))
NE <- rbind(MW,data.frame(Region="NE",State=c("NY","RI","CT","VT","NH","ME","MA","NJ","PA")))
Region.key <- rbind(NE,data.frame(Region="SE",State=c("AR","AL","LA","MS","TN","KY","WV","DC","VA","NC","SC","GA","FL","DE","MD")))
Region.key$State <- as.character(Region.key$State)
comics_geo <- comics  %>%
right_join(comics) %>%
right_join(Region.key)
plot(location.plot)
knitr::opts_chunk$set(echo = TRUE)
library(dplyr)
library(car)
library(MASS)
library(reshape)
library(mosaic)
library(tidyr)
library(ggplot2)
library(ggmap)
library(corrr)
library(cluster)
library(fpc)
library(pwr)
library(effsize)
#import data
n <- c("receiveTime", "participant", "controller", "item", "element", "type", "group", "question", "answer", "correct", "responseTime")
pairs <- read.csv('~/shift/experiments/exp1\ results/results.txt',header=FALSE,col.names=n,comment.char = "#")
View(pairs)
#Separate into training items, comics, fillers, aq, and survey items
survey <- pairs[pairs$controller=='Form',]
pairs <- pairs %>% mutate(question = lag(question))
comics <- pairs[pairs$controller=='ComicCaption'|pairs$controller=='AcceptabilityJudgment',]
comics <- comics[!is.na(comics$responseTime),]
comics <- comics[comics$type!='train',]
comics$answer <- as.numeric(as.character(comics$answer))
comics$type <- as.character(comics$type)
comics$type <- replace(comics$type,comics$item=="110","tdb")
comics$type <- replace(comics$type,comics$item=="111","tdb")
comics$type <- replace(comics$type,comics$item=="112","nddb")
comics$type <- replace(comics$type,comics$item=="19","fill-med")
comics$type <- replace(comics$type,comics$item=="20","fill-good")
comics$type <- replace(comics$type,comics$item=="21","fill-med")
comics$type <- replace(comics$type,comics$item=="22","fill-med")
comics$type <- replace(comics$type,comics$item=="23","fill-med")
comics$type <- replace(comics$type,comics$item=="24","fill-bad")
comics$type <- replace(comics$type,comics$item=="25","fill-good")
comics$type <- replace(comics$type,comics$item=="26","fill-bad")
comics$type <- replace(comics$type,comics$item=="27","fill-good")
comics$type <- replace(comics$type,comics$item=="28","fill-good")
comics$type <- factor(comics$type)
View(comics)
#Reshape and add survey info
forms <- subset( survey, select = -c(controller,group,item,correct,receiveTime,responseTime,element) )
sform <- cast(forms, participant ~ question,value='answer')
comics <- merge(comics,sform,by="participant")
sform$ParentsLanguage <- tolower(sform$ParentsLanguage)
sform$ParentsLanguage <- gsub("egnlish","english", sform$ParentsLanguage, perl=T)
nonEnglishParent <- subset(sform, grepl("english", ParentsLanguage, fixed=TRUE)==FALSE)
comics <- subset(comics, !(participant %in% nonEnglishParent$participant))
sform <- subset(sform, !(participant %in% nonEnglishParent$participant))
#Find outliers by comparing means across conditions
mean.by.participant <- comics %>%
group_by(participant,type) %>%
summarize( Mean = mean(answer))
parts <- cast(mean.by.participant,participant ~ type,value='Mean')
bad <- subset(parts, `item-day1`>=`item-day2`-1) #Throw out participants who didn't rate bad baseline lower than good baseline by at least 1 point on average
comics <- subset(comics, !(participant %in% bad$participant))
mean.by.participant <- subset(mean.by.participant, !(participant %in% bad$participant))
sform <- subset(sform, !(participant %in% bad$participant))
#Check balance of latin square:
xtabs(~group+type,data=comics) #tabulate to check latin square design
#Bin age into age groups
comics <- comics %>% mutate(
Age = as.numeric(levels(Age))[Age],
agegroup = derivedFactor(
"0-25" = Age<25,
"25-35" = Age<35,
"35-45" =Age<45,
"45-55"=Age<55,
"55-65"=Age<65,
"65-75"=Age<75,
"75-85"=Age<85,
"85-95"=Age<95,
">95"=Age>100,
.method = "first",
.default = NA))
agegroups <- comics %>%
group_by(agegroup) %>% summarize(a.count = length(unique(participant)))
agegroups
#Normalize spelling
states <- tolower(comics$State)
states <- gsub(" $","", states, perl=T)
for (i in 1:length(states)) {
if (nchar(states[i]) > 2) {
states[i] = state.abb[match(states[i] ,tolower(state.name))]
}
}
States <- toupper(states)
comics$State <- States
###### Create plot
state.data <- data.frame(states = table(States))
state.data$x <- state.center$x[match(state.data$states.States ,state.abb)]
state.data$y<- state.center$y[match(state.data$states.States ,state.abb)]
names(state.data) <- c("State","Frequency","x","y")
map <- get_map(location = 'USA', zoom = 4,maptype="roadmap")
#Normalize spelling
states <- tolower(comics$State)
states <- gsub(" $","", states, perl=T)
for (i in 1:length(states)) {
if (nchar(states[i]) > 2) {
states[i] = state.abb[match(states[i] ,tolower(state.name))]
}
}
States <- toupper(states)
comics$State <- States
###### Create plot
state.data <- data.frame(states = table(States))
state.data$x <- state.center$x[match(state.data$states.States ,state.abb)]
state.data$y<- state.center$y[match(state.data$states.States ,state.abb)]
names(state.data) <- c("State","Frequency","x","y")
map <- get_map(location = 'USA', zoom = 4,maptype="roadmap")
#Normalize spelling
states <- tolower(comics$State)
states <- gsub(" $","", states, perl=T)
for (i in 1:length(states)) {
if (nchar(states[i]) > 2) {
states[i] = state.abb[match(states[i] ,tolower(state.name))]
}
}
States <- toupper(states)
comics$State <- States
###### Create plot
state.data <- data.frame(states = table(States))
state.data$x <- state.center$x[match(state.data$states.States ,state.abb)]
state.data$y<- state.center$y[match(state.data$states.States ,state.abb)]
names(state.data) <- c("State","Frequency","x","y")
map <- get_map(location = 'USA', zoom = 4,maptype="roadmap")
goodcap <- subset(comics,cap=="0")
badcap <- subset(comics,cap=="1")
length(unique(badcap$participant))
goodmean.by.participant <- goodcap %>%
group_by(participant,type) %>%
summarize( Mean = mean(answer),
N = n(),
age = unique(Age))
badmean.by.participant <- badcap %>%
group_by(participant,type) %>%
summarize( Mean = mean(answer),
N = n(),
age = unique(Age))
bads <- badcap %>% group_by(type) %>%
summarize(mean = mean(answer))
bads
goods <- goodcap %>% group_by(type) %>%
summarize(mean = mean(answer))
goods
